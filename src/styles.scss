@use "@angular/material" as mat;

@include mat.core();

// $mat-theme-primary: mat.define-palette(mat.$pink-palette);
// $mat-theme-accent: mat.define-palette(mat.$blue-grey-palette);
// $mat-theme-warn: mat.define-palette(mat.$red-palette);

// // Define a dark theme
// $dark-theme: mat.define-dark-theme(
//   (
//     color: (
//       primary: $mat-theme-primary,
//       accent: $mat-theme-accent,
//     ),
//     // Only include `typography` and `density` in the default dark theme.
//     typography: mat.define-typography-config(),
//     density: 0,
//   )
// );

// // Define a light theme
// $light-theme: mat.define-light-theme(
//   (
//     color: (
//       primary: $mat-theme-primary,
//       accent: $mat-theme-accent,
//     ),
//   )
// );

$dark-theme: mat.define-dark-theme((
 color: (
   primary: mat.define-palette(mat.$pink-palette),
   accent: mat.define-palette(mat.$green-palette),
 ),
  // Only include `typography` and `density` in the default dark theme.
  typography: mat.define-typography-config(),
  density: 0,
));

// Define a light theme
$light-theme: mat.define-light-theme((
 color: (
   primary: mat.define-palette(mat.$indigo-palette),
   accent: mat.define-palette(mat.$pink-palette),
 ),
));

// // Apply the dark theme by default
// @include mat.core-theme($dark-theme);
// @include mat.button-theme($dark-theme);

@include mat.all-component-themes($dark-theme);

// Apply the light theme only when the user prefers light themes.
// @media (prefers-color-scheme: light) {
//   // Use the `-color` mixins to only apply color styles without reapplying the same
//   // typography and density styles.
//   @include mat.core-color($light-theme);
//   @include mat.button-color($light-theme);
// }

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
