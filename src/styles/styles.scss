@use 'sass:map';
@use "@angular/material" as mat;
@use "./variables.scss" as vars;
@use "../app/components/navbar/navbar.component.scss" as navbar;

@include mat.core();

@mixin create-theme-variables($theme-name, $color-config) {
  // TODO: See https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwij-fyuo6L-AhXyF1kFHTwvBr4QrAIoAHoECBEQAQ&url=https%3A%2F%2Fstackoverflow.com%2Fquestions%2F18112238%2Fset-a-variable-in-sass-depending-on-the-selector&usg=AOvVaw1P0EzcWAKrlA87j24ym6wQ
  // TODO: Google: css use different variable value for different class
    @each $palette-name,
    $palette in $color-config {
      .#{$theme-name} {
        --#{$palette-name}-color: #{mat.get-color-from-palette($palette, "default")};
        --#{$palette-name}-color-contrast: #{mat.get-color-from-palette($palette, "default-contast")};
      }
    }
}

@function getThemeColor($color-name) {
  @return var(--#{$color-name});
}

.dark-theme {
  @include mat.all-component-themes(vars.$dark-theme);
}

.light-theme {
  @include mat.all-component-themes(vars.$light-theme);
}

@include create-theme-variables("dark-theme", vars.$dark-color-config);
@include create-theme-variables("light-theme", vars.$light-color-config);

p#dog {
  // color: var(--accent-color);
  color: getThemeColor("accent-color");
}

a {
    color: getThemeColor("accent-color");
}

:root {
  color-scheme: dark;
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}