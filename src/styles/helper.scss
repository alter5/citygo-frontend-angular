@use "sass:map";
@use "@angular/material" as mat;

// TODO: Look into creating a custom palette

/// Creates global variables using Angular Material theme values
@mixin create-theme-variables($theme, $color-config) {
  $isDark: map-get($theme, "is-dark");

  @each $palette-name, $palette in $color-config {
    @include create-theme-variables-using-palette($palette, $palette-name);
  }

  @if $isDark {
    --background: #303030;
    --background-contrast: white;

    --foreground: #424242;
    --foreground-contrast: white;

    --border: #d9e2e8;
  } @else {
    --background: #f1f0f0;
    --background-contrast: rgba(0, 0, 0, 0.87);

    --foreground: white;
    --foreground-contrast: rgba(0, 0, 0, 0.87);

    --border: #d9e2e8;
  }
}

/// Creates global variables for each main hue in a Angular Material palette
@mixin create-theme-variables-using-palette($palette, $palette-name) {
  --#{$palette-name}: #{mat.get-color-from-palette($palette, "default")};
  --#{$palette-name}-contrast: #{mat.get-color-from-palette(
      $palette,
      "default-contrast"
    )};

  --#{$palette-name}-dark: #{mat.get-color-from-palette($palette, "lighter")};
  --#{$palette-name}-dark-contrast: #{mat.get-color-from-palette(
      $palette,
      "lighter-contrast"
    )};

  --#{$palette-name}-light: #{mat.get-color-from-palette($palette, "darker")};
  --#{$palette-name}-light-contrast: #{mat.get-color-from-palette(
      $palette,
      "darker-contrast"
    )};
}

@function get-theme-color($color-name) {
  @return var(--#{$color-name});
}

// TODO: Use these stash variables:
